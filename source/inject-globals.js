import traverse from 'babel-traverse';
import template from 'babel-template';
import injectionTemplate from './injection-template';

/**
 * Inject global variables into a react component,
 * making them available via this[globalKey] (if possible, deprecated)
 * and on node's global object
 * @param  {Object} ast        generated by babel
 * @param  {Object} globals    global variables to inject
 * @return {Object}            ast with injected globals
 */
export default (ast, globals = {}) => {
	if (Object.keys(globals).length === 0) {
		return ast;
	}

	if (ast.hasGlobals) {
		return ast;
	}

	ast.hasGlobals = true;

	// Inject access to global config
	// as global.<key>
	traverse(ast, {
		Program: {
			exit(path) {
				const IDENTIFIER = path.scope
					.generateUidIdentifier('injection');

				const INJECTION = template(
					`var ${IDENTIFIER.name} = ${JSON.stringify(globals)};`
				)();

				const injection = injectionTemplate({
					IDENTIFIER,
					INJECTION
				});

				path.unshiftContainer('body', injection);
			}
		}
	});

	return ast;
};

module.change_code = 1; // eslint-disable-line
